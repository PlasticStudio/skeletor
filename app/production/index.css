/**
 * Global
 *
 * Styles and mixins that are used throughout the website. Keep things logically
 * separated into concern-based filenames (ie typography, forms, etc).
 * The order of these includes is important.
 **/
* {
  border: 0;
  margin: 0;
  padding: 0; }

/* Fonts */
/* Breakpoints */
/**
 * Colours
 **/
/**
 * Map names to colours
 * @type {[type]}
 */
.black-text {
  color: #000000 !important; }

.black-bg {
  background-color: #000000 !important; }
  .black-bg.semi-trans {
    background-color: rgba(0, 0, 0, 0.95) !important; }
  .black-bg .darken {
    background-color: black !important; }

.white-text {
  color: #FFFFFF !important; }

.white-bg {
  background-color: #FFFFFF !important; }
  .white-bg.semi-trans {
    background-color: rgba(255, 255, 255, 0.95) !important; }
  .white-bg .darken {
    background-color: #f2f2f2 !important; }

.grey-text {
  color: #BBBBBB !important; }

.grey-bg {
  background-color: #BBBBBB !important; }
  .grey-bg.semi-trans {
    background-color: rgba(187, 187, 187, 0.95) !important; }
  .grey-bg .darken {
    background-color: #aeaeae !important; }

.light_grey-text {
  color: #EEEEEE !important; }

.light_grey-bg {
  background-color: #EEEEEE !important; }
  .light_grey-bg.semi-trans {
    background-color: rgba(238, 238, 238, 0.95) !important; }
  .light_grey-bg .darken {
    background-color: #e1e1e1 !important; }

.blue-text {
  color: #0000ff !important; }

.blue-bg {
  background-color: #0000ff !important; }
  .blue-bg.semi-trans {
    background-color: rgba(0, 0, 255, 0.95) !important; }
  .blue-bg .darken {
    background-color: #0000e6 !important; }

/**
 * Retrieve colour from $colours map
 * @param  {string} $key [name of colour, as defined in $colours map]
 * @return hex colour
 */
/*
	Link box style
	Use any element but put text in a <p> and if you want an arrow add a <span>
	eg: <a href="" class="readmore readmore__linkBox"><p>Text</p><span></span></a>
*/
/*
	Size in pixels, either 12, 8, or 6
	Angle will rotate the whole bracket, either 0 or 90
*/
/**
 * [Subtracts the border and padding from the width of the element.]
 */
/**
 * [scale description]
 * @param  {[int]} $zoom [The level of zoom you want on the element. eg: '1.1'.]
 */
/**
 * [Pass the angle you want the element to rotate. eg: 90deg. NOTE: You need to add 'deg' to the angle. eg: 90deg.]
 * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]
 */
/**
 * [Rotate and vertically align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]
 * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]
 * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]
 */
/**
 * [Rotate and horizontally align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]
 * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]
 * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]
 */
/**
 * [Vertically align element within a relatively positioned element.]
 * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will vertically center align the element.]
 */
/**
 * [Horizontally align element within a relatively positioned element.]
 * @param  {[percentage]} $leftPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]
 */
/**
 * [Horizontally and vertically align element within a relatively positioned element.]
 * @param  {[percentage]} $leftPos [Pass the horizontally position as a percetage. eg 50% will horizontally center align the element.]
 * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]
 */
/**
 * [transition description]
 * @param  {[style]} $propertie [The style you want to animate. Defaults to 'all'.]
 * @param  {[int in seconds]} $time      [The speed at which you want the transition to take. Defaults to '0.3s'.]
 * @param  {[movement type]} $mode      [The type of movement you want eg: linear, ease, ease-in, ease-out. Defaults to 'linear'.]
 */
/**
 * Grid panels
 * Creates a grid of items that have a fixed height
 * @param $cols int = number of items per row
 * @param $col_gap percent = gap between items in each row (optional, defaults to 2%)
 * @param $row_gap percent = gap between row (optional, defaults to two times col_gap (4%))
 **/
/**
 * Ease between states
 * Use this to smooth hover/active/focus events
 **/
/**
 * Clearfix
 **/
/**
 * Multi-column
 * @param $cols int = number of columns to span
 * @param $sum int = total number of columns
 * @param $gap mixed = gap between items (optional, defaults to 1rem)
 **/
.inner {
  max-width: 1450px;
  margin: 0 auto; }

.cf::after {
  content: '';
  clear: both;
  display: block; }

/**
 * Global typographic styles
 *
 * All typography formatting and general font settings
 * belong in this file. For unique blocks and widgets, etc
 * you should put those in their own component file
 **/
body,
html {
  font-family: "Arial", sans-serif;
  font-size: 16px; }

h1 {
  font-size: 3rem; }

h2 {
  font-size: 2.2rem; }

h3 {
  font-size: 1.8rem; }

h4 {
  font-size: 1.4rem; }

h5 {
  font-size: 1rem; }

p {
  margin: 0.4rem 0; }

ul,
ol {
  padding-left: 24px; }
  ul li,
  ol li {
    padding: 0.2em 0; }

a {
  -webkit-transition: all 0.2s ease-in-out;
  -moz-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

input,
select,
textarea,
option,
button {
  font-family: "Arial";
  font-size: 1rem;
  padding: 10px 16px;
  box-sizing: border-box;
  border: 1px solid #BBBBBB;
  width: 100%; }
  input:focus, input:active,
  select:focus,
  select:active,
  textarea:focus,
  textarea:active,
  option:focus,
  option:active,
  button:focus,
  button:active {
    border-color: #000000; }

.field {
  padding-bottom: 15px; }
  .field label {
    display: block;
    padding-bottom: 4px; }

input[type="submit"] {
  background: #BBBBBB;
  color: #FFFFFF;
  cursor: pointer;
  text-decoration: none;
  font-size: 1rem;
  font-weight: 700;
  border: 0;
  width: auto;
  padding: 10px 30px; }
  input[type="submit"]:hover {
    background: #a2a2a2; }

/**
 * Removes iOS default styling
 * 
 * Targets all necessary inputs and removes the blue underline for phone numbers
 **/
button,
textarea,
input.text,
input[type="text"],
input[type="button"],
input[type="submit"],
.input-checkbox {
  -webkit-appearance: none;
  border-radius: 0; }

a[href^="tel"] {
  color: inherit;
  text-decoration: none; }

::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.25); }

:-moz-placeholder {
  color: rgba(0, 0, 0, 0.25); }

::-moz-placeholder {
  color: rgba(0, 0, 0, 0.25); }

:-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.25); }

table {
  margin: 10px 0;
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse; }
  table tr {
    border-bottom: 1px solid #BBBBBB; }
    table tr th,
    table tr td {
      text-align: left;
      padding: 4px 8px;
      vertical-align: top; }
      table tr th:not(:first-child),
      table tr td:not(:first-child) {
        border-left: 1px solid #BBBBBB; }
    table tr th {
      font-weight: 600;
      background: #EEEEEE;
      vertical-align: bottom; }

/**
 * Self-contained components
 *
 * Any significant component that is reused throughout the site. Typically these would have
 * a matching template (ie Includes/{COMPONENT_NAME}), and js (ie js/{COMPONENT_NAME}).
 **/
header.page-header .branding {
  text-decoration: none; }
  header.page-header .branding img {
    max-width: 100%; }

footer.page-footer {
  padding: 2em 0;
  margin-top: 2em;
  border-top: 1px solid #EEEEEE; }

.menu__item {
  display: block;
  position: relative; }
  .menu__item--current > .menu__item__link {
    font-weight: 600; }
  .menu__item--expanded > .menu__submenu {
    display: block; }
  .menu__item__link {
    text-decoration: none; }

.menu__submenu {
  margin-left: 15px;
  display: none; }

.page-banner {
  width: 100%;
  background-repeat: no-repeat;
  background-position: 50% 25%;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover; }
  .page-banner h1 {
    color: #FFFFFF; }
  .page-banner p {
    color: #FFFFFF; }
  .page-banner--no-image {
    background: #BBBBBB; }
  .page-banner__inner {
    padding: 30px 5%;
    min-height: 150px; }

.ResourceHolderPage {
  /* Change the colour of the pagination */ }
  .ResourceHolderPage .resources__menu .optionset > label {
    font-weight: 800;
    text-transform: uppercase;
    padding: 0 0 10px;
    /* margin-bottom: 10px;
			margin-top: 20px; */ }
  .ResourceHolderPage .resources__menu .field.checkboxset li {
    display: block; }
    .ResourceHolderPage .resources__menu .field.checkboxset li label::before {
      border-radius: 0;
      border: 1px solid #BBBBBB;
      width: 18px;
      height: 18px;
      top: 0; }
    .ResourceHolderPage .resources__menu .field.checkboxset li label::after {
      top: 1px;
      left: 1px;
      font-size: 18px; }
    .ResourceHolderPage .resources__menu .field.checkboxset li input:checked + label:before {
      background: #0000ff; }
  .ResourceHolderPage .resources__menu .readmore {
    margin-top: 40px; }
  .ResourceHolderPage .pagination ul li a {
    color: #FFFFFF; }
  .ResourceHolderPage .pagination ul li.active a {
    color: #0000ff; }
  .ResourceHolderPage .pagination .next li a span::before, .ResourceHolderPage .pagination .next li a span::after,
  .ResourceHolderPage .pagination .previous li a span::before,
  .ResourceHolderPage .pagination .previous li a span::after {
    background-color: #FFFFFF; }

.resources .resource {
  float: left;
  margin-bottom: 30px;
  background-color: #FFFFFF;
  min-height: 450px;
  position: relative;
  padding-bottom: 80px; }

.resources .resource__image {
  width: 100%;
  height: 220px;
  background-repeat: no-repeat;
  background-position: center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover; }

.resources .resource__type--Image {
  padding-bottom: 0;
  min-height: 530px; }
  .resources .resource__type--Image .resource__image {
    height: 530px; }

.resources .resource__category {
  font-family: "Times New Roman";
  font-size: 11px;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: 1px;
  color: #0000ff;
  display: inline-block;
  padding: 12px 22px;
  background-color: #000000;
  margin: 50px 0 0; }

.resources .resource__content {
  padding: 30px 25px; }
  .resources .resource__content h2 {
    font-family: "Times New Roman";
    font-size: 21px;
    font-weight: 900;
    letter-spacing: 1px; }
    .resources .resource__content h2 a {
      color: #000000; }
  .resources .resource__content p {
    font-size: 18px; }
  .resources .resource__content .readmore {
    position: absolute;
    bottom: 25px;
    left: 25px; }
    .resources .resource__content .readmore p {
      font-size: 14px; }

.resources__all {
  margin-bottom: 80px; }
  .resources__all .resource {
    width: 31%;
    margin-right: 3.4%; }
    .resources__all .resource:nth-child(3n) {
      margin-right: 0; }
    .resources__all .resource:nth-child(4n) {
      clear: left; }
    @media (max-width: 1170px) {
      .resources__all .resource {
        width: 48%;
        margin-right: 4%; }
        .resources__all .resource:nth-child(2n) {
          margin-right: 0; }
        .resources__all .resource:nth-child(3) {
          margin-right: 3.4%;
          clear: left; }
        .resources__all .resource:nth-child(4) {
          clear: none; } }

.resources__featured .resource {
  width: 23.5%;
  margin-right: 2%;
  height: 450px; }
  .resources__featured .resource:nth-child(3), .resources__featured .resource:nth-child(4n+7) {
    margin-right: 0; }

.resources__featured .resource--first {
  width: 49%;
  padding: 0;
  min-height: 530px; }
  .resources__featured .resource--first .resource__image {
    width: 48%;
    margin-right: 2%;
    min-height: 530px;
    float: left; }
  .resources__featured .resource--first .resource__content {
    width: 40%;
    float: left;
    padding: 30px 5%; }
    .resources__featured .resource--first .resource__content .resource__category {
      background-color: transparent;
      color: #EEEEEE;
      padding: 0 0 20px; }
  .resources__featured .resource--first .readmore {
    left: 55%; }

@media (max-width: 1330px) {
  .resources__featured .resource {
    width: 31%;
    margin-right: 3%; }
    .resources__featured .resource:nth-child(3), .resources__featured .resource:nth-child(4n+7) {
      margin-right: 3%; }
    .resources__featured .resource:nth-child(2), .resources__featured .resource:nth-child(3n+5) {
      margin-right: 0; }
  .resources__featured .resource--first {
    width: 65%; } }

@media (max-width: 880px) {
  .resources__featured .resource {
    width: 48.5%; }
    .resources__featured .resource:nth-child(2), .resources__featured .resource:nth-child(3n+5) {
      margin-right: 3%; }
    .resources__featured .resource:nth-child(2n+3) {
      margin-right: 0; }
  .resources__featured .resource--first {
    width: 100%;
    margin-right: 0; } }

@media (max-width: 680px) {
  .resources__featured .resource {
    width: 100%;
    margin-right: 0; }
    .resources__featured .resource:nth-child(2), .resources__featured .resource:nth-child(3n+5) {
      margin-right: 0; }
  .resources__featured .resource--first {
    padding-bottom: 80px; }
    .resources__featured .resource--first .resource__image {
      width: 100%;
      float: none;
      margin: 0; }
    .resources__featured .resource--first .resource__content {
      width: 90%;
      float: none; }
      .resources__featured .resource--first .resource__content .resource__category {
        margin: 0; }
    .resources__featured .resource--first .readmore {
      left: 25px; } }

.resources__menu {
  position: relative;
  z-index: 2; }

/* filtering form, change to select boxes */
@media (max-width: 1024px) {
  .ResourceHolderPage .sidebar__left {
    width: 100%;
    float: none;
    margin: 0; }
  .ResourceHolderPage #Form_FilterForm .field.checkboxset {
    float: left;
    width: 30%;
    margin-right: 3%; } }

/*
	POPUPS
*/
.hide {
  display: none; }

.popup {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  left: 0;
  z-index: 1002;
  background: rgba(0, 0, 0, 0.9);
  height: 100%;
  width: 100%; }
  .popup .inner {
    height: 100%;
    width: 100%;
    top: 0; }
  .popup_close {
    position: absolute;
    top: 0;
    right: 20px;
    font-size: 18px;
    cursor: pointer;
    width: 30px;
    height: 30px;
    border-radius: 50%; }
    @media all and (max-width: 680px) {
      .popup_close {
        position: fixed;
        top: 50px;
        right: 27px; } }
    .popup_close span {
      display: block;
      position: absolute;
      height: 3px;
      width: 60%;
      background-color: #FFFFFF;
      border-radius: 2px;
      left: 0;
      right: 0;
      bottom: 0;
      top: 0;
      margin: auto; }
      .popup_close span:first-child {
        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        -o-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg); }
      .popup_close span:last-child {
        -webkit-transform: rotate(-45deg);
        -moz-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
        transform: rotate(-45deg); }
  .popup_content {
    position: relative;
    background: #FFFFFF;
    max-height: 93%;
    overflow-y: auto;
    margin: 2rem auto; }
    @media all and (max-width: 680px) {
      .popup_content {
        width: 94%;
        margin: 2rem 0; } }
  .popup_liner {
    height: 100%;
    position: relative;
    padding: 3em; }

.capability_popup {
  position: relative; }
  .capability_popup .capability_content {
    color: #BBBBBB;
    overflow: auto hidden; }
  .capability_popup .capability_name {
    font-size: 2rem;
    padding: 0 0 0.5em; }
  .capability_popup .capability_banner {
    background: url("../images/rounded-square-pattern-orange.jpg") no-repeat center center;
    color: #FFFFFF;
    margin: -3em;
    margin-top: 3em; }
    .capability_popup .capability_banner_content {
      padding: 3rem;
      text-align: center; }
      .capability_popup .capability_banner_content h3 {
        color: #FFFFFF;
        font-size: 2rem;
        padding: 0 0 1rem; }
        @media all and (max-width: 680px) {
          .capability_popup .capability_banner_content h3 {
            font-size: 1.4rem;
            line-height: 1.7rem; } }
      .capability_popup .capability_banner_content a {
        color: pink; }
  .capability_popup .tabs_related {
    position: absolute;
    margin: 4em 0 2em; }
    .capability_popup .tabs_related h4 {
      font-size: 1.2rem;
      color: #BBBBBB; }
    .capability_popup .tabs_related .tabs_tabs {
      margin-bottom: 0; }
      .capability_popup .tabs_related .tabs_tabs li a {
        border: 2px solid; }
        .capability_popup .tabs_related .tabs_tabs li a:hover {
          color: #FFFFFF; }

.pagination {
  position: relative; }
  .pagination ul {
    padding: 0 40px; }
    .pagination ul.hidden-xs {
      text-align: center; }
    .pagination ul li {
      display: inline-block; }
      .pagination ul li a {
        display: block;
        padding: 10px 20px;
        font-family: 'Nunito';
        font-size: 16px;
        font-weight: 800;
        color: #000000; }
      .pagination ul li.active a {
        color: #0000ff; }
  .pagination .next,
  .pagination .previous {
    padding: 0;
    position: absolute;
    top: 0; }
    .pagination .next li,
    .pagination .previous li {
      margin: 0; }
      .pagination .next li a,
      .pagination .previous li a {
        position: relative;
        display: block;
        width: 30px;
        height: 30px;
        padding: 5px; }
        .pagination .next li a span,
        .pagination .previous li a span {
          transform: rotate(0deg);
          width: 20px;
          height: 20px;
          position: absolute;
          top: 0;
          bottom: 0;
          right: 0;
          margin: auto;
          z-index: 2;
          display: block;
          width: 32px;
          height: 35px;
          left: 0; }
          .pagination .next li a span::after, .pagination .next li a span::before,
          .pagination .previous li a span::after,
          .pagination .previous li a span::before {
            content: '';
            display: block;
            width: 12px;
            height: 2px;
            background: #000000;
            position: absolute;
            top: 0;
            left: 0; }
          .pagination .next li a span::before,
          .pagination .previous li a span::before {
            transform: rotate(-45deg); }
          .pagination .next li a span::after,
          .pagination .previous li a span::after {
            transform: rotate(45deg); }
          .pagination .next li a span::before,
          .pagination .previous li a span::before {
            left: 12px;
            top: 20px; }
          .pagination .next li a span::after,
          .pagination .previous li a span::after {
            left: 12px;
            top: 12px; }
  .pagination .previous {
    left: 0; }
  .pagination .next {
    right: 0; }
  .pagination .previous li a span {
    transform: rotate(180deg); }

/**
 * Page-specific
 *
 * These should match the class of said page (ie HomePage = homepage, Contact = contact)
 **/
.Security ul {
  display: none; }

.Security form {
  margin: 0 auto;
  /* align checkbox with label for 'remember me' */ }
  .Security form input.checkbox {
    width: inherit;
    float: left;
    margin: 3px 10px 0 0; }
  .Security form #ForgotPassword {
    display: inline-block; }
    .Security form #ForgotPassword a {
      display: inline-block;
      background: #BBBBBB;
      color: #FFFFFF;
      cursor: hand;
      cursor: pointer;
      text-decoration: none;
      font-size: 12px;
      font-weight: 700;
      text-transform: uppercase;
      padding: 10px 16px;
      box-sizing: border-box;
      border: 0; }
      .Security form #ForgotPassword a:hover {
        background: #a2a2a2; }


/*# sourceMappingURL=index.css.map*/